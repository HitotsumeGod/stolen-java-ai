/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    
    implementation libs.junit.jupiter

    implementation 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    
    //Core dl4j module
    implementation libs.deeplearning4j
    
    //Dl4j backend
    implementation libs.nd4j
    
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	implementation 'org.slf4j:slf4j-api:2.0.17'
	
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
	implementation 'org.slf4j:slf4j-simple:2.0.17'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'main.Pilot'
}

tasks.named('run') {
    jvmArgs = '-Dorg.nd4j.native.libnativeloader=avx2'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
